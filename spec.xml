<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.12 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC6749 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6749.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY I-D.wdenniss-oauth-device-posture SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.wdenniss-oauth-device-posture.xml">
<!ENTITY RFC7662 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7662.xml">
]>


<rfc docName="draft-hanson-oauth-scss-00" category="std">

  <front>
    <title abbrev="OAuth 2.0 SCSS">OAuth 2.0 Session Continuity and Signal Sharing</title>

    <author initials="J." surname="Hanson" fullname="Jared Hanson">
      <organization>Okta</organization>
      <address>
        <email>jared.hanson@okta.com</email>
      </address>
    </author>
    <author initials="K." surname="McGuinness" fullname="Karl McGuinness">
      <organization>Okta</organization>
      <address>
        <email>kmcguinness@okta.com</email>
      </address>
    </author>

    <date year="2019" month="October" day="30"/>

    <area>Security</area>
    <workgroup>Web Authorization Protocol</workgroup>
    

    <abstract>


<t>This specification defines a mechanism in which clients and resource servers can
share session signals with an authorization server.  These signals are
transported using existing OAuth 2.0 endpoints, providing a lightweight approach
to continuous authorization.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>In OAuth, an authorization server issues access tokens to clients, which are
used to access protected resources hosted by a resource server.  Prior to
issuing tokens, the authorization server authenticates the end-user and obtains
consent.  This interaction establishes a session in which the end-user accesses
both the authorization server and one or more applications.</t>

<t>These sessions can be long-lived, lasting for days or months.  During this time,
the status of the end-user and her device, such as location, network address, or
security posture, may change - requring a change in access privileges.
Unfortunately, typical OAuth deployments determine access only at the time of
authentication and lack awareness of dynamically changing information about
ongoing sessions.</t>

<t>This specification defines a mechanism in which clients and resource servers can
share session signals with an authorization server.  These signals are
transported using existing OAuth 2.0 endpoints.  Use of existing endpoints is
intended to provide a lightweight approach to continuous authorization, while
complimenting future protocols that provide real-time access evaluation using a
publish-subscribe approach.</t>

<section anchor="client-profiles" title="Client Profiles">

<t>This specification has been designed around the client profiles defined in
Section 2.1 of <xref target="RFC6749"/>:</t>

<t><list style="hanging">
  <t hangText='web application:'>
  A web application is a confidential client running on a web server.  Resource
owners access the client via an HTML user interface rendered in a user-agent on
the device used by the resource owner.  The client credentials as well as any
access token issued to the client are stored on the web server and are not
exposed to or accessible by the resource owner.</t>
  <t hangText='user-agent-based application:'>
  A user-agent-based application is a public client in which the client code is
downloaded from a web server and executes within a user-agent (e.g., web
browser) on the device used by the resource owner.  Protocol data and
credentials are easily accessible (and often visible) to the resource owner.
Since such applications reside within the user-agent, they can make seamless use
of the user-agent capabilities when requesting authorization.</t>
  <t hangText='native application:'>
  A native application is a public client installed and executed on the device
used by the resource owner.  Protocol data and credentials are accessible to the
resource owner.  It is assumed that any client authentication credentials
included in the application can be extracted.  On the other hand, dynamically
issued credentials such as access tokens or refresh tokens can receive an
acceptable level of protection.  At a minimum, these credentials are protected
from hostile servers with which the application may interact.  On some
platforms, these credentials might be protected from other applications residing
on the same device.</t>
</list></t>

</section>
<section anchor="token-locality" title="Token Locality">

<t>After obtaining approval of the end-user via interaction within the end-user’s
user-agent, OAuth issues delegation-specific access tokens and refresh tokens to
clients.  This specification defines two token localities, based on where tokens
reside relative to the user-agent in which the issuance was approved:</t>

<t><list style="hanging">
  <t hangText='off device:'>
  A token is off device when it resides with an application that is not located
on the same device as the end-user’s user-agent.  Tokens issued to a web
application are off device, as the application runs on a web server acceessed
remotely via the user-agent.</t>
  <t hangText='on device:'>
  A token is on device when it resides with an application that is located on
the same device as the end-user’s user-agent.  Tokens issued to native
native applications and user-agent-based applications are on device, as the
application is executing either on the device or within the user-agent itself.</t>
</list></t>

</section>
<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL
NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”,
“MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
</section>
<section anchor="signal-sharing" title="Signal Sharing">

<section anchor="refreshing-an-access-token" title="Refreshing an Access Token">

<section anchor="from-on-device" title="From On Device">

<t>A native application possessing a refresh token that is on device shares signals
by making a refresh request that includes device posture, as defined in section
6 of <xref target="I-D.wdenniss-oauth-device-posture"/>.</t>

<t>For example, the client makes the following HTTP request using transport-layer
security (with extra line breaks for display purposes only):</t>

<figure><artwork><![CDATA[
  POST /token HTTP/1.1
  Host: server.example.com
  Content-Type: application/x-www-form-urlencoded

  grant_type=refresh_token&refresh_token=tGzv3JOkF0XG5Qx2TlKWIA
  client_id=s6BhdRkqt3&device_posture=%7B%22screen_lock%22%3Atrue%2C
  %22device_os%22%3A%22iOS%22%2C%22device_os_version%22%3A%2211.1%22%7D
]]></artwork></figure>

</section>
<section anchor="from-off-device" title="From Off Device">

<t>A web application posessing a refresh token that is off device shares signals by
making a refresh request that includes user-agent posture, as defined by User
Agent Posture Signals.</t>

<t>For example, the client makes the following HTTP request using transport-layer
security (with extra line breaks for display purposes only):</t>

<figure><artwork><![CDATA[
  POST /token HTTP/1.1
  Host: server.example.com
  Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
  Content-Type: application/x-www-form-urlencoded

  grant_type=refresh_token&refresh_token=tGzv3JOkF0XG5Qx2TlKWIA
  client_id=s6BhdRkqt3&user_agent_posture=%7B%22user_agent%22%3A%22Mozilla%2F5.0
  %20%28Macintosh%3B%20Intel%20Mac%20OS%20X%2010_14_5%29%20AppleWebKit%2F537.36
  %20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F75.0.3770.142%20Safari%2F537.36%22
  %2C%22ip_address%22%3A%2293.184.216.34%22%7D
]]></artwork></figure>

<t>The client MUST only include user-agent posture in online access scenarios.
Refresh tokens used in offline scenarios, when the end-user is not present, are
decoupled from the session and lack end-user user agent context.</t>

</section>
</section>
<section anchor="token-introspection" title="Token Introspection">

<section anchor="introspection-request" title="Introspection Request">

<t>A resource server querying for to determine the state of an access token shares
signals by making an by making an introspection request to the introspection
endpoint, as defined in Section 2.1 of <xref target="RFC7662"/>.</t>

<t>In addition to the parameters defined by Section 2.1 of <xref target="RFC7662"/>, the
following parameters are also defined:</t>

<t><list style="hanging">
  <t hangText='user_agent_posture'>
  OPTIONAL. URL-encoded JSON dictionary, containing user-agent posture signals,
as defined by User Agent Posture Signals.</t>
</list></t>

<t>For example, the client makes the following HTTP request using transport-layer
security (with extra line breaks for display purposes only):</t>

<figure><artwork><![CDATA[
  POST /introspect HTTP/1.1
  Host: server.example.com
  Accept: application/json
  Content-Type: application/x-www-form-urlencoded
  Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW

  token=mF_9.B5f-4.1JqM&token_type_hint=access_token
  &user_agent_posture=%7B%22user_agent%22%3A%22Mozilla%2F5.0
  %20%28Macintosh%3B%20Intel%20Mac%20OS%20X%2010_14_5%29%20AppleWebKit%2F537.36
  %20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F75.0.3770.142%20Safari%2F537.36%22
  %2C%22ip_address%22%3A%2293.184.216.34%22%7D
]]></artwork></figure>

<t>Note that the locality of an access token is always off device when presented to
a resource server.</t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC6749;
&RFC2119;
&RFC8174;
&I-D.wdenniss-oauth-device-posture;
&RFC7662;


    </references>




  </back>

<!-- ##markdown-source:
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

-->

</rfc>

