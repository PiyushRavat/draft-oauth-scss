<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.12 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC6749 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6749.xml">
<!ENTITY I-D.wdenniss-oauth-device-posture SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.wdenniss-oauth-device-posture.xml">
<!ENTITY RFC7662 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7662.xml">
]>


<rfc docName="draft-hanson-oauth-scss-00">

  <front>
    <title abbrev="scss">OAuth 2.0 Session Continuity and Signal Sharing</title>

    <author initials="J." surname="Hanson" fullname="Jared Hanson">
      <organization>Okta</organization>
      <address>
        <email>jared.hanson@okta.com</email>
      </address>
    </author>
    <author initials="K." surname="McGuinness" fullname="Karl McGuinness">
      <organization>Okta</organization>
      <address>
        <email>kmcguinness@okta.com</email>
      </address>
    </author>

    <date year="2019" month="October" day="01"/>

    
    
    

    <abstract>


<t>This specification defines a mechanism in which clients and resource servers can
share session signals with an authorization server.  These signals are
transported using existing OAuth 2.0 endpoints, providing a lightweight approach
to continuous authorization.</t>



    </abstract>


  </front>

  <middle>


<section anchor="problems2" title="Introduction">

<t>In OAuth, an authorization server issues access tokens to clients, which are
used to access protected resources hosted by a resource server.  Prior to
issuing tokens, the authorization server authenticates the end-user and obtains
consent.  This interaction establishes a session in which the end-user accesses
both the authorization server and one or more applications.</t>

<t>These sessions can be long-lived, lasting for days or months.  During this time,
the status of the end-user and her device, such as location, network address, or
security posture, may change - requring a change in access privileges.
Unfortunately, typical OAuth deployments determine access only at the time of
authentication and lack awareness of dynamically changing information about
ongoing sessions.</t>

<t>This specification defines a mechanism in which clients and resource servers can
share session signals with an authorization server.  These signals are
transported using existing OAuth 2.0 endpoints.  Use of existing endpoints is
intended to provide a lightweight approach to continuous authorization, while
complimenting future protocols that provide real-time access evaluation using a
publish-subscribe approach.</t>

<section anchor="client-profiles" title="Client Profiles">

<t>This specification has been designed around the client profiles defined in
Section 2.1 of <xref target="RFC6749"/>:</t>

<t><list style="hanging">
  <t hangText='web application:'>
  A web application is a confidential client running on a web server.  Resource
owners access the client via an HTML user interface rendered in a user-agent on
the device used by the resource owner.  The client credentials as well as any
access token issued to the client are stored on the web server and are not
exposed to or accessible by the resource owner.</t>
  <t hangText='user-agent-based application:'>
  A user-agent-based application is a public client in which the client code is
downloaded from a web server and executes within a user-agent (e.g., web
browser) on the device used by the resource owner.  Protocol data and
credentials are easily accessible (and often visible) to the resource owner.
Since such applications reside within the user-agent, they can make seamless use
of the user-agent capabilities when requesting authorization.</t>
  <t hangText='native application:'>
  A native application is a public client installed and executed on the device
used by the resource owner.  Protocol data and credentials are accessible to the
resource owner.  It is assumed that any client authentication credentials
included in the application can be extracted.  On the other hand, dynamically
issued credentials such as access tokens or refresh tokens can receive an
acceptable level of protection.  At a minimum, these credentials are protected
from hostile servers with which the application may interact.  On some
platforms, these credentials might be protected from other applications residing
on the same device.</t>
</list></t>

</section>
<section anchor="token-locality" title="Token Locality">

<t>After obtaining approval of the end-user via interaction within the end-user’s
user-agent, OAuth issues delegation-specific access tokens and refresh tokens to
clients.  This specification defines two token localities, based on where tokens
reside relative to the user-agent in which the issuance was approved:</t>

<t><list style="hanging">
  <t hangText='off device:'>
  A token is off device when it resides with an application that is not located
on the same device as the end-user’s user-agent.  Tokens issued to a web
application are off device, as the application runs on a web server acceessed
remotely via the user-agent.</t>
  <t hangText='on device:'>
  A token is on device when it resides with an application that is located on
the same device as the end-user’s user-agent.  Tokens issued to native
native applications and user-agent-based applications are on device, as the
application is executing either on the device or within the user-agent itself.</t>
</list></t>

</section>
</section>
<section anchor="problems8" title="Signal Sharing">

<section anchor="refreshing-an-access-token" title="Refreshing an Access Token">

<section anchor="from-on-device" title="From On Device">

<t>A native application possessing a refresh token that is on device shares signals
by making a refresh request that includes device posture, as defined in section
6 of <xref target="I-D.wdenniss-oauth-device-posture"/>.</t>

<t>For example, the client makes the following HTTP request using transport-layer
security (with extra line breaks for display purposes only):</t>

<figure><artwork><![CDATA[
  POST /token HTTP/1.1
  Host: server.example.com
  Content-Type: application/x-www-form-urlencoded

  grant_type=refresh_token&refresh_token=tGzv3JOkF0XG5Qx2TlKWIA
  client_id=s6BhdRkqt3&device_posture=%7B%22screen_lock%22%3Atrue%2C
  %22device_os%22%3A%22iOS%22%2C%22device_os_version%22%3A%2211.1%22%7D
]]></artwork></figure>

</section>
<section anchor="from-off-device" title="From Off Device">

<t>A web application posessing a refresh token that is off device shares signals by
making a refresh request that includes user-agent posture, as defined by User
Agent Posture Signals.</t>

<t>For example, the client makes the following HTTP request using transport-layer
security (with extra line breaks for display purposes only):</t>

<figure><artwork><![CDATA[
  POST /token HTTP/1.1
  Host: server.example.com
  Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
  Content-Type: application/x-www-form-urlencoded

  grant_type=refresh_token&refresh_token=tGzv3JOkF0XG5Qx2TlKWIA
  client_id=s6BhdRkqt3&user_agent_posture=%7B%22user_agent%22%3A%22Mozilla%2F5.0
  %20%28Macintosh%3B%20Intel%20Mac%20OS%20X%2010_14_5%29%20AppleWebKit%2F537.36
  %20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F75.0.3770.142%20Safari%2F537.36%22
  %2C%22ip_address%22%3A%2293.184.216.34%22%7D
]]></artwork></figure>

<t>The client MUST only include user-agent posture in online access scenarios.
Refresh tokens used in offline scenarios, when the end-user is not present, are
decoupled from the session and lack end-user user agent context.</t>

</section>
</section>
<section anchor="token-introspection" title="Token Introspection">

<section anchor="introspection-request" title="Introspection Request">

<t>A resource server querying for to determine the state of an access token shares
signals by making an by making an introspection request to the introspection
endpoint, as defined in Section 2.1 of <xref target="RFC7662"/>.</t>

<t>In addition to the parameters defined by Section 2.1 of <xref target="RFC7662"/>, the
following parameters are also defined:</t>

<t><list style="hanging">
  <t hangText='user_agent_posture'>
  OPTIONAL. URL-encoded JSON dictionary, containing user-agent posture signals,
as defined by User Agent Posture Signals.</t>
</list></t>

<t>For example, the client makes the following HTTP request using transport-layer
security (with extra line breaks for display purposes only):</t>

<figure><artwork><![CDATA[
  POST /introspect HTTP/1.1
  Host: server.example.com
  Accept: application/json
  Content-Type: application/x-www-form-urlencoded
  Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW

  token=mF_9.B5f-4.1JqM&token_type_hint=access_token
  &user_agent_posture=%7B%22user_agent%22%3A%22Mozilla%2F5.0
  %20%28Macintosh%3B%20Intel%20Mac%20OS%20X%2010_14_5%29%20AppleWebKit%2F537.36
  %20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F75.0.3770.142%20Safari%2F537.36%22
  %2C%22ip_address%22%3A%2293.184.216.34%22%7D
]]></artwork></figure>

<t>Note that the locality of an access token is always off device when presented to
a resource server.</t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC6749;
&I-D.wdenniss-oauth-device-posture;
&RFC7662;


    </references>




  </back>

<!-- ##markdown-source:
H4sIAK1fk10AA+1ZXW/bOhJ956/gIsjdFrBcx0mTNkCBTVOkTdo0vUmKXuyL
QUt0zBtJdEUpjltkf/ueGVKyZLtB792X3YsNkA9L/Jg5c+bMkImiSJSmTPWh
vDiqyqkc9gfySjtnbC6PbV6avDLlQqo8kVfmJlepvJqqwuQ3Qo3Hhb47lC52
TiQ2zlWGVZJCTcpoqnJn88gqLBnRgGgwEPTBFodCygjfUprcHcqzvnzHg/mR
X+NMFTppP7bFjcrNN1XCKhh6Wyp+rDNl0kP5Ow3v+y3/YfGyH9usu8v7vjyP
31Ymz+Faa6f3qkhX3zy+2W0W34TRy71EFEVSjV1ZqLgU4npqnHQzHZuJiXkd
meiJwRypZKZjmGpcBsvkfGriqYxTo/PSMciFdrYqYi2dLu504WSscuEAOT3x
YXEcByfnBvFSufS4BovDvL6U11PtdDMYCwiYl7uZLUqgWznEUOp740r6Yxl8
nScza2BOT84Ke2cSeq1kam6m5VzTT6lmeKPiqSitjD1HbOW6dvSFRyUzSZJq
IbbkaV4WNqlitjJ8fd/CSuNUZ274IMRp7u3o/cgraZyrCMU4BhaytLc6p181
gr0AKDlbOXiJV2Es9il1TJ7XCDs5tY4ejEHvVdyB36fC2AIrCNqUQPDb9WQ5
1Zuto4cwg2KO1WkYwIxgSMGhteNSgY0CkDkM4xCBKMBaE29oIe1KNU6NmzJV
6oA3ROkuyY5pJ8a2nD5iFO2ca9BaZhYsQvDSwErXJ64yS/xOzDY51jK1+U2U
mjud9GSqPEUmWCFRC+dXysupgwdvqoKhIUdKk+meIEPgRQlC2Mk6CFP8TvSd
iXVPuopi5bCbt6cnc13ObXErVZIgIMDaFsLpGJtAg2YIV1VgXqYWkpLoRssI
gfvqbVD1M8DVBN3cmVTfaHj6OYcDZZUjNukCQVzMgEIaiJ/oWWoXGWdhohGP
DNlar2LzFAwp2RfyEX6JVqgJa/IsVTEMn4N7Oc+ayGQBlaFd0mAvmWnIjixM
G9uqFMDa0ps6CP2/ioJgic+O4FqOat4hlQUxP098mnqt0T9QGvmI0nDSQ2Ig
xGA2xZDZWhFXOO1tbFNKR4Sw3qXQKo04liHG+k6llXff+6XErOJMjFw1dnFh
xrqxBgHa2pLHjDlkwk6wvdsYtCnYPdaaokcwwlVV2ApBIi75oJFNvECIcIKo
iivt9WDY3yH4vn//2+XJ8f7B3suHh0Mh5nrcTuNDcSiP5MpD4EsZYfMJ/AUk
oHrYr6jynDwk/vGsJt6XgTnCznMiTi2zS1vvjCK+vLs+/yA5pVm8JiomSBHK
gs3HuvQyUjc0BzWcVvBJL1mWobj0qGEq7+cJV+8UYylvtyOJmOs0pd8qX4i2
+vuKwAxqmclcLy1ZAy/pxdJPzhEakNtS6HuIip9ua0U1qEc/sFCIpV/RWNHM
tTg8NsIHhYkV17Z2xL123oKjhrqqeZ5aRSkyKWzWiRf7oe8hjlRsKJNXgX+i
+zf9Hk0R48LO8eJpDcfPBONTSB2IfklRT0QnJkBQK2dIGpewPeFqM0Fagyr8
6GkdmlUor0xOGsUloFWSaBxlaHCIZi5d4tq74CKVqVvSM5WlxAUMEaHatACI
1UyNTWpKQwhBr7lYaK9Eq90KCgPq3Xo8159vjiJqXppSuJdhSbpwiz8Gt1yF
u4Wzx1SsLXJasnHIiYxYTZKHjGnSolu0WutDiuO0Snz2civRcjf0BPqe21u0
2lJe+FFoPEBEFCO0Ca1iJ0JSth2oa323dUPSFXoCN6b1E9qs0LFmzHPO9Rn1
ROhJ9J1OSQ1DK0dhk/KopIpocpNVGdMDBWcVuKb3E5xF1PZBcJv6yFVwmYNt
16nTqPsz77azmRazVJVUxd2mHTOuXOPWtj55PVjrXKezVOCJw6EkkMXXmGvW
uA/oj8DihRBHSK0iNJJMYqpIKF1rrRYJdbuxbKVTPebvTrQzy9fv0GAnGl0T
GxnVBW0lcr7T6IQOrXLoQ+rWdnMHgxYviHfqHUN69qQXSzIVMOmwpghqUOjU
p2EQk1aSd/STzFekK3OiGoOjE1RMO5kEXH1S17VDLl94gTBlEKBWc9TiA2cU
pqF2+K4VnFqPHfG8i3TLYMLG47UsXazror0R0XZpW69esT0EddytFnEOEp0K
EiCXWWp1mQpdzMAtDscmPPI/A0eAoi71/wkUXm43qLGn3GPV1Sd740ENmliR
bi/O3IwaTsluTYQkbaw9wMLpdELn2q2Vq5D10+yLB07fS58gnKm5PPIJxC7T
6y15QroAUXnj64PYWG3QoXDfzkecTso1+C+jxn2+q3t2gWKDQtmdGmpgmOx1
39XzmzOWavejYBfLiNgP3ehp9KY/h+LhFOLCLY9fIAoLPDwAqBNgqe8V2nLd
a7c3VLs9LSY2Te2c7Ht3ff2pMc234M1hI0rVQrcOgk+Yi1yPcFrAQW2Mfv7W
+ROqcVBnHBarglo7f3p7Cgn4V/MlUGwvrq7lMw8i7fxsp7+Dx+9g/GHdDwfL
w2US3YUR664XM33Yjs+z+2g+n0dUDqKqSHVOzVsiMOUG9pcjHDT1q4D9iHf8
pfPpVfn2293u2cXtyeC3t89/vR9ep++/nB5hvkdrZJJXbv/1NLm8/Vru/uJh
HgWYX20fvN4eDnE+wSFjhDS8xaft3aOyqPT28BiL4HOYYp1/h5/m4or+Hh63
346oGMKhZtQOQKEPB2/a4LWIC31aMnf1/MHoP87apfZ2aYseSfwkbVv5uYm6
4D9OoIU44hGf/IiQve4vxtCjdkN7KF+jOUd7+u2fx+rt5ZXaPRmcf5vlX96c
ZL9m+Ht49uW/iNUUxhGHcYXZyxcNLc/tN5Omant48rw/YIYPtocvzlWMfse6
6fYu5g1O4VeK33iMn0T3wW/43hmMdvZGz7eHL/HhCO7qL3r83pS02O5Bf3e/
We89nXE5QwapuUUyDd7q+Nb6mcdT8B/PTg5gQn/34GDQ39lDPg2u1AQVoVkN
1vKClGdmNgq3Wo0nL3f7Oy/2+sOd/f7u3oZMax2Hzz+DDnwRFai/gfkk1BjS
urlysc5hjwXVL7u9Gh9FaPxkwhOakT1f+DvNZGh4ZliAW0W6CUp0bKtZWje3
XPbD7VJzGdYs4G///JmMGHdftttbvhimVpFLDOtL5xHKKCcdqczK5ZbEi2JR
306ifVhe3tX3kHz/pPJO+xr0Riz1pimTefeD6RjSaJDvQjsvRX21tVo7N97l
HOzvD7lGnuZ02Wl8O+WXnakCDVRJR5OWjj2yDEuXWCpVawE+N6bO1ivRf1+k
WE83dIEXn65PLz4efejLz5cfopDx8uzq4iMki/dWxaLHAQynjw0UDIj2xLoI
y/9VEV6G+WeVmA+tXT393f8v648K7p+RdUzyGpydjF72Xz+fRHv9nbOv57/w
U5buEXrS8pVPCS/YmPR/Fd6owh9xjPJdB1ExHFkXm1SFrl7SOf+LZOVYGaST
jzhi/Z9N4t9oB4HKhx0AAA==

-->

</rfc>

